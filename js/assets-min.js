export default{template:'<div>\n<div v-if="!assets.length">No assets added. Use the File Upload\n& Hosting section to view or create hosting contracts, then upload assets\ninto a hosting contract. Once you have assets in a hosting contract, you can\nadd them to your 360 post and they will appear here.</div>\n<div v-if="Assets.length">\n<h6>Assets</h6>\n<div v-for="(asset, index) in Assets">\n<form onsubmit="return false;">\n<div class="dropdown ms-auto">\n<button class="btn btn-secondary" type="button" data-bs-toggle="dropdown" aria-expanded="true">Type: {{typeDict[asset.type].name}}\n</button>\n<ul class="dropdown-menu dropdown-menu-dark bg-black" >\n<li v-for="type in Types"><a class="dropdown-item" role="button" @click="switchType(index,type)">{{typeDict[type].name}}</a></li>\n</ul>\n</div>\n<p class="text-break">CID: {{asset.hash}}</p>\n<p>In: {{asset.contract}}</p>\n<div class="d-flex p-2 justify-content-between align-items-center flex-wrap">\n<div class="m-2">\n<div class="input-group m-2">\n<input type="text" class="form-control" v-model="asset.name" placeholder="Picture Name">\n</div>\n<div class="input-group m-2">\n<input type="text" class="form-control"  v-model="asset.thumbHash" placeholder="Thumbnail IPFS Hash">\n</div>\n</div>\n<div class="d-flex flex-column p-2 m-2">\n<div class="row g-3 align-items-center" v-for="(val, param, index) in asset.config">\n<div class="col-auto me-auto" v-if="paramDict[asset.type][param]">\n<label :for="param" class="col-form-label"><i :class="paramDict[asset.type][param].icon"></i>{{paramDict[asset.type][param].name}}:{{asset.config[param]}}</label>\n</div>\n<div class="col-auto">\n<input :type="paramDict[asset.type][param].type" :class="{[\'form-\' + paramDict[asset.type][param].type]: true}" :id="param" v-model="asset.config[param]" @input="focusAsset(asset.hash, asset.contract, asset.name, asset.thumbHash)" :min="paramDict[asset.type][param].min" :max="paramDict[asset.type][param].max" :step="paramDict[asset.type][param].default">\n</div>\n<div v-if="param == \'atr\'">\n<p v-if="asset.config[param]">{{asset.config[param]}}</p><button class="btn btn-primary" @click="addAtr(asset.hash)">Add Attribute</button>\n<p v-for="(atr, j) in asset.atr">{{atr}}</p><button class="btn btn-danger" @click="subAtr(asset.hash, j)">Remove Attribute</button>\n</div>\n</div>\n</div>\n<div class="d-flex flex-column">\n<div class="d-flex" style="justify-content: center;"><img :src="\'https://ipfs.dlux.io/ipfs/\' + asset.hash" class="img-fluid" style="max-width: 300px;" :alt="asset.hash"></div>\n<div class="m-2 btn-group">\n<button class="btn btn-primary" @click="addAsset(asset.hash, asset.contract, asset.name, asset.thumbHash, asset.r)">Refresh dApp</button>\n<button type="button" class="btn btn-dark ms-0 me-0 ps-0 pe-0" disabled></button>\n<button class="btn btn-primary" @click="delAsset(asset.hash, asset.contract, asset.name, asset.thumbHash)">Delete Asset</button>\n<button v-if="asset.type == \'img\' || asset.type == \'ts\'" class="btn btn-primary" @click="copyToClipboard(\'![\' + asset.name + \'](http://ipfs.dlux.io/ipfs/\' + asset.hash + \')\')"><i class="fa-solid fa-image"></i><i class="fa-solid fa-caret-right"></i><i class="fa-solid fa-clipboard"></i></button>\n<button class="btn btn-primary" @click="copyToClipboard(\'[\' + asset.name + \'](http://ipfs.dlux.io/ipfs/\' + asset.hash + \')\')"><i class="fa-solid fa-clipboard"></i></button>\n<button class="btn btn-primary" v-if="asset.type == \'app\'" @click="setDapp(asset.hash)"><i class="fa-solid fa-tablet-screen-button"></i></button>\n<button type="button" class="btn btn-dark ms-0 me-0 ps-0 pe-0" disabled></button>\n<button class="btn btn-primary" :disabled="index == 0"  @click="moveAsset(asset.hash, \'up\')"><i class="fa-solid fa-up-long"></i></button>\n<button type="button" class="btn btn-dark ms-0 me-0 ps-0 pe-0" disabled></button>\n<button class="btn btn-primary" :disabled="index == Assets.length - 1"  @click="moveAsset(asset.hash, \'down\')"><i class="fa-solid fa-down-long"></i></button>\n</div>\n<div class="form-check ms-auto me-auto" v-if="hasProp(asset, \'f\')">\n<input class="form-check-input" type="checkbox" value="" :id="asset.hash + \'firstImage\'" :checked="asset.f" @click="focusAsset(asset.hash, asset.contract, asset.name, asset.thumbHash)">\n<label class="form-check-label" :for="asset.hash + \'firstImage\'">Initial Image</label>\n</div>\n</div>\n</div>\n</form>\n</div>\n</div>\n</div>',props:{assets:{default:function(){return[]}},types:{default:""}},data:()=>({Assets:[],Types:[],typeDict:{ts:{name:"360"},obj:{name:"Object"},img:{name:"Image"},aud:{name:"Audio"},vid:{name:"Video"},txt:{name:"Text"},bin:{name:"Binary"},pdf:{name:"PDF"},doc:{name:"Document"},app:{name:"Application"},oth:{name:"Other"}},paramDict:{oth:{atr:{name:"Attributes",type:"text",default:"",icon:""}},app:{atr:{name:"Attributes",type:"text",default:"",icon:""},perm:{name:"Permissions",type:"text",default:"",icon:""}},doc:{atr:{name:"Attributes",type:"text",default:"",icon:""}},pdf:{atr:{name:"Attributes",type:"text",default:"",icon:""}},bin:{atr:{name:"Attributes",type:"text",default:"",icon:""}},txt:{atr:{name:"Attributes",type:"text",default:"",icon:""}},vid:{atr:{name:"Attributes",type:"text",default:"",icon:""}},aud:{atr:{name:"Attributes",type:"text",default:"",icon:""}},img:{atr:{name:"Attributes",type:"text",default:"",icon:""},sx:{name:"Scale X",min:0,max:10,step:.1,type:"range",default:1,units:"deg"},sy:{name:"Scale Y",min:0,max:10,step:.1,type:"range",default:1,units:"deg"},s:{name:"Scale"}},ts:{atr:{name:"Attributes",type:"text",default:"",icon:""},r:{name:"Rotation",icon:""},rx:{name:"Roll X",min:-180,max:180,step:1,type:"range",default:0,units:"deg",icon:["fa-solid","fa-arrows-rotate","me-2"]},ry:{name:"Pan Y",min:-180,max:180,step:1,type:"range",default:0,units:"deg",icon:["fa-solid","fa-arrows-left-right","me-2"]},rz:{name:"Roll Z",min:-180,max:180,step:1,type:"range",default:0,units:"deg",icon:["fa-solid","fa-arrows-rotate","me-2"]}},obj:{atr:{name:"Attributes",type:"text",default:"",icon:""},r:{name:"Rotation"},rx:{name:"Roll X",min:-180,max:180,step:1,type:"range",default:0,units:"deg"},ry:{name:"Pan Y",min:-180,max:180,step:1,type:"range",default:0,units:"deg"},rz:{name:"Roll Z",min:-180,max:180,step:1,type:"range",default:0,units:"deg"},px:{name:"Position X",min:-180,max:180,step:1,type:"range",default:0,units:"deg"},py:{name:"Position Y",min:-180,max:180,step:1,type:"range",default:0,units:"deg"},pz:{name:"Position Z",min:-180,max:180,step:1,type:"range",default:0,units:"deg"},sx:{name:"Scale X",min:0,max:10,step:.1,type:"range",default:1,units:"deg"},sy:{name:"Scale Y",min:0,max:10,step:.1,type:"range",default:1,units:"deg"},sz:{name:"Scale Z",min:0,max:10,step:.1,type:"range",default:1,units:"deg"},s:{name:"Scale"},p:{name:"Position"}}},defaultTypes:{ts:{contract:"",f:0,hash:"",name:"",r:"0 0 0",config:{rx:"0",ry:"0",rz:"0",atr:""},thumbHash:"",type:"ts",atr:[]},img:{contract:"",f:0,hash:"",name:"",s:"1 1 1",config:{sx:"1",sy:"1",atr:""},thumbHash:"",type:"img",atr:[]},aud:{contract:"",hash:"",name:"",config:{atr:""},thumbHash:"",type:"aud",atr:[]},vid:{contract:"",hash:"",name:"",config:{atr:""},thumbHash:"",type:"vid",atr:[]},txt:{contract:"",hash:"",name:"",config:{atr:""},thumbHash:"",type:"txt",atr:[]},bin:{contract:"",hash:"",name:"",config:{atr:""},thumbHash:"",type:"bin",atr:[]},doc:{contract:"",hash:"",name:"",config:{atr:""},thumbHash:"",type:"doc",atr:[]},app:{contract:"",hash:"",name:"",config:{perm:"",atr:""},thumbHash:"",type:"app",atr:[],perm:[]},oth:{contract:"",hash:"",name:"",config:{atr:""},thumbHash:"",type:"oth",atr:[]},pdf:{contract:"",hash:"",name:"",config:{atr:""},thumbHash:"",type:"pdf",atr:[]},obj:{contract:"",hash:"",name:"",r:"0 0 0",config:{rx:"0",ry:"0",rz:"0",px:"0",py:"0",pz:"0",sx:"1",sy:"1",sz:"1",atr:""},p:"0 0 0",s:"1 1 1",atr:[],thumbHash:"",type:"obj"}}}),emits:["updateassets","dluxmock","setdapp"],methods:{setDapp(t){this.$emit("setdapp",t)},update(){let t=[];for(var s=0;s<this.Assets.length;s++){const a=Object.keys(this.Assets[s]);for(var e=0;e<a.length;e++)this.defaultTypes[this.Assets[s].type].hasOwnProperty(a[e])||delete this.Assets[s][a[e]];this.Assets[s].config.hasOwnProperty("rx")&&(this.Assets[s].r=`${this.Assets[s].config.rx} ${this.Assets[s].config.ry} ${this.Assets[s].config.rz||0}`),this.Assets[s].config.hasOwnProperty("px")&&(this.Assets[s].p=`${this.Assets[s].config.px} ${this.Assets[s].config.py} ${this.Assets[s].config.pz||0}`),this.Assets[s].config.hasOwnProperty("sx")&&(this.Assets[s].s=`${this.Assets[s].config.sx} ${this.Assets[s].config.sy} ${this.Assets[s].config.sz||1}`),t.push(Object.assign({},this.Assets[s])),delete t[t.length-1].config}this.$emit("updateassets",t)},hasProp:(t,s)=>Object.prototype.hasOwnProperty.call(t,s),copyToClipboard(t){const s=document.createElement("textarea");s.value=t,document.body.appendChild(s),s.select(),document.execCommand("copy"),document.body.removeChild(s)},switchType(t,s){(t=-1)&&(t=this.Assets.length-1),this.Types.indexOf(s)>=0&&(this.Assets[t]=Object.assign({},this.defaultTypes[s],this.Assets[t]),this.Assets[t].type=s,this.Assets[t].config=Object.assign({},this.defaultTypes[s].config))},focusAsset(t,s,e="",a,n){var i=-1;if(!t)return!1;for(var r=[],o=0;o<this.Assets.length;o++)this.Assets[o].hash==t&&(i=o),1==this.Assets[o].f&&r.push(o);if(r.indexOf(i)>=0){r.splice(r.indexOf(i),1);for(o=0;o<r.length;o++)this.Assets[r[o]].f=0}i>=0?(this.Assets[i].name=e||this.Assets[i].name,this.Assets[i].thumbHash=a||t,this.Assets[i].type!=n&&this.switchType(i,n)):this.Assets.push({hash:t,name:e,type:n,contract:s,thumbHash:a}),this.update()},addAtr(t){var s=-1;if(!t)return!1;for(var e=0;e<this.Assets.length;e++)if(this.Assets[e].hash==t){s=e;break}s>=0&&(this.Assets[s].atr.push(this.Assets[s].config.atr),this.Assets[s].config.atr=""),this.update()},subAtr(t,s){var e=-1;if(!t)return!1;for(var a=0;a<this.Assets.length;a++)if(this.Assets[a].hash==t){e=a;break}e>=0&&this.Assets[e].atr.splice(s,1),this.update()},addAsset(t,s,e="",a="",n="ts"){var i=-1;if(!t)return!1;"object"==typeof t&&(s=t.contract,t=t.id);for(var r=0;r<this.Assets.length;r++)this.Assets[r].f=0,this.Assets[r].hash==t&&(i=r);i>=0?(this.Assets[i].name=e||this.Assets[i].name,this.Assets[i].thumbHash=a||t):this.Assets.push({hash:t,name:e,type:n,contract:s,thumbHash:a}),this.switchType(i,n),this.update()},delAsset(t){var s=-1;if(!t)return!1;for(var e=0;e<this.Assets.length;e++)this.Assets[e].hash==t&&(s=e);s>=0&&this.Assets.splice(s,1),this.update()},moveAsset(t,s="up"){var e=-1;if(!t)return!1;for(var a=0;a<this.Assets.length;a++)this.Assets[a].hash==t&&(e=a);if(e>=1&&"up"==s||e<this.Assets.length-1&&"down"==s){const t=this.Assets[e];this.Assets.splice(e,1),this.Assets.splice("up"==s?e-1:e+1,0,t)}this.update()}},computed:{},watch:{"assets.length"(t){for(var s=0;s<this.assets.length;s++)this.addAsset(this.assets[s].hash,this.assets[s].contract,this.assets[s].name,this.assets[s].thumbHash,this.assets[s].type)}},mounted(){this.Types=this.types.split(",");for(var t=0;t<this.assets.length;t++)this.addAsset(this.assets[t].hash,this.assets[t].contract,this.assets[t].name,this.assets[t].thumbHash,this.assets[t].type)}};